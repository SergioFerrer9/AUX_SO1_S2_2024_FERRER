

********** Desplegar Strimzi **********
kubectl create namespace kafka

********** Aplicamos lo necesario para strimzi, sus archivos de instalacion, ClusterRoles, ClusterRolesBindings, CRDs, etc...
kubectl create -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka

kubectl get pod -n kafka --watch
kubectl logs deployment/strimzi-cluster-operator -n kafka -f

**********Desplegar cluster de kafka
kubectl apply -f https://strimzi.io/examples/latest/kafka/kraft/kafka-single-node.yaml -n kafka 
kubectl wait kafka/my-cluster --for=condition=Ready --timeout=300s -n kafka 


********** Enviar y recibir mensajes forma 1
kubectl -n kafka run kafka-producera -ti --image=quay.io/strimzi/kafka:0.43.0-kafka-3.8.0 --rm=true --restart=Never -- bin/kafka-console-producer.sh --bootstrap-server my-cluster-kafka-bootstrap:9092 --topic my-topic

kubectl -n kafka run kafka-consumera -ti --image=quay.io/strimzi/kafka:0.43.0-kafka-3.8.0 --rm=true --restart=Never -- bin/kafka-console-consumer.sh --bootstrap-server my-cluster-kafka-bootstrap:9092 --topic my-topic --from-beginning




********** Enviar y recibir mensajes forma 2
kubectl apply -f kafka-topic.yaml

kubectl apply -f producer.yaml  
kubectl apply -f consumer.yaml  

kubectl logs -f kafka-producer -n kafka
kubectl logs -f kafka-consumer -n kafka


Consumer auxiliar
kubectl -n kafka run kafka-consumerb -ti --image=quay.io/strimzi/kafka:0.43.0-kafka-3.8.0 --rm=true --restart=Never -- bin/kafka-console-consumer.sh --bootstrap-server my-cluster-kafka-bootstrap:9092 --topic test-topic